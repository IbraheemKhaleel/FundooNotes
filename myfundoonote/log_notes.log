ERROR | Requested note does not exist
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 131, in get_object
    return Note.objects.get(id = pk, is_deleted = False) #calls get method to retrieve a particular user notes
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\query.py", line 429, in get
    raise self.model.DoesNotExist(
Notes.models.Note.DoesNotExist: Note matching query does not exist.
ERROR | Something went wrong
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 131, in get_object
    return Note.objects.get(id = pk, is_deleted = False) #calls get method to retrieve a particular user notes
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\query.py", line 429, in get
    raise self.model.DoesNotExist(
Notes.models.Note.DoesNotExist: Note matching query does not exist.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 146, in get
    notes = self.get_object(pk=pk)
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 134, in get_object
    result=utils.manage_response(status=False,message='note not found')
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\utils.py", line 65, in manage_response
    if kwargs['data']:
KeyError: 'data'
DEBUG | validated new note details: {'id': 1, 'deleted_at': None, 'title': 'test note1', 'description': 'test description1', 'reminder': None, 'color': '#FFFFFF', 'image': None, 'is_archived': False, 'is_deleted': False, 'is_pinned': False, 'created_at': '2020-12-24T01:48:42.242506Z', 'updated_at': '2020-12-24T01:48:42.242506Z', 'user': 1, 'collaborators': [1], 'labels': [1]}
DEBUG | validated note list: [OrderedDict([('id', 1), ('deleted_at', None), ('title', 'test note1'), ('description', 'test description1'), ('reminder', None), ('color', '#FFFFFF'), ('image', None), ('is_archived', False), ('is_deleted', False), ('is_pinned', False), ('created_at', '2020-12-24T01:48:42.242506Z'), ('updated_at', '2020-12-24T01:48:42.242506Z'), ('user', 1), ('collaborators', [1]), ('labels', [1])])]
ERROR | Requested note does not exist
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 131, in get_object
    return Note.objects.get(id = pk, is_deleted = False) #calls get method to retrieve a particular user notes
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\query.py", line 429, in get
    raise self.model.DoesNotExist(
Notes.models.Note.DoesNotExist: Note matching query does not exist.
ERROR | Something went wrong
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 131, in get_object
    return Note.objects.get(id = pk, is_deleted = False) #calls get method to retrieve a particular user notes
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\query.py", line 429, in get
    raise self.model.DoesNotExist(
Notes.models.Note.DoesNotExist: Note matching query does not exist.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 146, in get
    notes = self.get_object(pk=pk)
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 134, in get_object
    result=utils.manage_response(status=False,message='note not found')
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\utils.py", line 65, in manage_response
    if kwargs['data']:
KeyError: 'data'
DEBUG | validated new note details: {'id': 1, 'deleted_at': None, 'title': 'test note1', 'description': 'test description1', 'reminder': None, 'color': '#FFFFFF', 'image': None, 'is_archived': False, 'is_deleted': False, 'is_pinned': False, 'created_at': '2020-12-24T01:50:06.880629Z', 'updated_at': '2020-12-24T01:50:06.880629Z', 'user': 1, 'collaborators': [1], 'labels': [1]}
DEBUG | validated note list: [OrderedDict([('id', 1), ('deleted_at', None), ('title', 'test note1'), ('description', 'test description1'), ('reminder', None), ('color', '#FFFFFF'), ('image', None), ('is_archived', False), ('is_deleted', False), ('is_pinned', False), ('created_at', '2020-12-24T01:50:06.880629Z'), ('updated_at', '2020-12-24T01:50:06.880629Z'), ('user', 1), ('collaborators', [1]), ('labels', [1])])]
DEBUG | validated new note details: {'id': 2, 'deleted_at': None, 'title': 'test note1', 'description': 'test description1', 'reminder': None, 'color': '#FFFFFF', 'image': None, 'is_archived': False, 'is_deleted': False, 'is_pinned': False, 'created_at': '2020-12-24T01:50:06.911897Z', 'updated_at': '2020-12-24T01:50:06.911897Z', 'user': 1, 'collaborators': [1], 'labels': [1]}
DEBUG | validated updated note data: {'id': 1, 'deleted_at': None, 'title': 'test note', 'description': 'Test description', 'reminder': None, 'color': '#FFFFFF', 'image': None, 'is_archived': False, 'is_deleted': False, 'is_pinned': False, 'created_at': '2020-12-24T01:50:06.880629Z', 'updated_at': '2020-12-24T01:50:06.943124Z', 'user': 1, 'collaborators': [1], 'labels': [1]}
DEBUG | deleted note with id: 1
ERROR | Something went wrong
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 211, in delete
    result=utils.manage_response(status=True,message='deleted successfully')
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\utils.py", line 65, in manage_response
    if kwargs['data']:
KeyError: 'data'
ERROR | Requested note does not exist
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 131, in get_object
    return Note.objects.get(id = pk, is_deleted = False) #calls get method to retrieve a particular user notes
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\query.py", line 429, in get
    raise self.model.DoesNotExist(
Notes.models.Note.DoesNotExist: Note matching query does not exist.
ERROR | Something went wrong
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 131, in get_object
    return Note.objects.get(id = pk, is_deleted = False) #calls get method to retrieve a particular user notes
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\query.py", line 429, in get
    raise self.model.DoesNotExist(
Notes.models.Note.DoesNotExist: Note matching query does not exist.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 146, in get
    notes = self.get_object(pk=pk)
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 134, in get_object
    result=utils.manage_response(status=False,message='note not found')
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\utils.py", line 65, in manage_response
    if kwargs['data']:
KeyError: 'data'
DEBUG | validated new note details: {'id': 1, 'deleted_at': None, 'title': 'test note1', 'description': 'test description1', 'reminder': None, 'color': '#FFFFFF', 'image': None, 'is_archived': False, 'is_deleted': False, 'is_pinned': False, 'created_at': '2020-12-24T01:55:57.979383Z', 'updated_at': '2020-12-24T01:55:57.979383Z', 'user': 1, 'collaborators': [1], 'labels': [1]}
DEBUG | validated note list: [OrderedDict([('id', 1), ('deleted_at', None), ('title', 'test note1'), ('description', 'test description1'), ('reminder', None), ('color', '#FFFFFF'), ('image', None), ('is_archived', False), ('is_deleted', False), ('is_pinned', False), ('created_at', '2020-12-24T01:55:57.979383Z'), ('updated_at', '2020-12-24T01:55:57.979383Z'), ('user', 1), ('collaborators', [1]), ('labels', [1])])]
DEBUG | validated new note details: {'id': 2, 'deleted_at': None, 'title': 'test note1', 'description': 'test description1', 'reminder': None, 'color': '#FFFFFF', 'image': None, 'is_archived': False, 'is_deleted': False, 'is_pinned': False, 'created_at': '2020-12-24T01:55:58.032812Z', 'updated_at': '2020-12-24T01:55:58.032812Z', 'user': 1, 'collaborators': [1], 'labels': [1]}
DEBUG | validated updated note data: {'id': 1, 'deleted_at': None, 'title': 'test note', 'description': 'Test description', 'reminder': None, 'color': '#FFFFFF', 'image': None, 'is_archived': False, 'is_deleted': False, 'is_pinned': False, 'created_at': '2020-12-24T01:55:57.979383Z', 'updated_at': '2020-12-24T01:55:58.048412Z', 'user': 1, 'collaborators': [1], 'labels': [1]}
DEBUG | deleted note with id: 1
ERROR | Something went wrong
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 211, in delete
    result=utils.manage_response(status=True,message='deleted successfully')
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\utils.py", line 65, in manage_response
    if kwargs['data']:
KeyError: 'data'
ERROR | Requested note does not exist
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 130, in get_object
    return Note.objects.get(id = pk, is_deleted = False) #calls get method to retrieve a particular user notes
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\query.py", line 429, in get
    raise self.model.DoesNotExist(
Notes.models.Note.DoesNotExist: Note matching query does not exist.
ERROR | Something went wrong
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 147, in get
    result=utils.manage_response(status=True,message='retrieved successfully',data=serializer.data)
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\rest_framework\serializers.py", line 548, in data
    ret = super().data
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\rest_framework\serializers.py", line 246, in data
    self._data = self.to_representation(self.instance)
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\rest_framework\serializers.py", line 502, in to_representation
    attribute = field.get_attribute(instance)
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\rest_framework\relations.py", line 536, in get_attribute
    relationship = get_attribute(instance, self.source_attrs)
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\rest_framework\fields.py", line 97, in get_attribute
    instance = getattr(instance, attr)
AttributeError: 'Response' object has no attribute 'collaborators'
ERROR | Something went wrong
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 91, in post
    utils.get_user(request)
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\utils.py", line 19, in get_user
    raise User.DoesNotExist('No such account exists')
myfundooNotes.models.User.DoesNotExist: No such account exists
ERROR | Requested note does not exist
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 130, in get_object
    return Note.objects.get(id = pk, is_deleted = False) #calls get method to retrieve a particular user notes
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\query.py", line 429, in get
    raise self.model.DoesNotExist(
Notes.models.Note.DoesNotExist: Note matching query does not exist.
ERROR | Something went wrong
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 170, in put
    utils.get_user(request)
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\utils.py", line 19, in get_user
    raise User.DoesNotExist('No such account exists')
myfundooNotes.models.User.DoesNotExist: No such account exists
ERROR | Requested note does not exist
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 130, in get_object
    return Note.objects.get(id = pk, is_deleted = False) #calls get method to retrieve a particular user notes
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\query.py", line 429, in get
    raise self.model.DoesNotExist(
Notes.models.Note.DoesNotExist: Note matching query does not exist.
ERROR | Something went wrong
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 208, in delete
    notes.soft_delete() #soft deleteing particular note. it will be hidden for user to retirieve.
AttributeError: 'Response' object has no attribute 'soft_delete'
DEBUG | validated new note details: {'id': 1, 'deleted_at': None, 'title': 'test note1', 'description': 'test description1', 'reminder': None, 'color': '#FFFFFF', 'image': None, 'is_archived': False, 'is_deleted': False, 'is_pinned': False, 'created_at': '2020-12-24T01:59:23.595054Z', 'updated_at': '2020-12-24T01:59:23.595562Z', 'user': 1, 'collaborators': [1], 'labels': [1]}
DEBUG | validated note list: [OrderedDict([('id', 1), ('deleted_at', None), ('title', 'test note1'), ('description', 'test description1'), ('reminder', None), ('color', '#FFFFFF'), ('image', None), ('is_archived', False), ('is_deleted', False), ('is_pinned', False), ('created_at', '2020-12-24T01:59:23.595054Z'), ('updated_at', '2020-12-24T01:59:23.595562Z'), ('user', 1), ('collaborators', [1]), ('labels', [1])])]
DEBUG | validated new note details: {'id': 2, 'deleted_at': None, 'title': 'test note1', 'description': 'test description1', 'reminder': None, 'color': '#FFFFFF', 'image': None, 'is_archived': False, 'is_deleted': False, 'is_pinned': False, 'created_at': '2020-12-24T01:59:23.632535Z', 'updated_at': '2020-12-24T01:59:23.632535Z', 'user': 1, 'collaborators': [1], 'labels': [1]}
DEBUG | validated updated note data: {'id': 1, 'deleted_at': None, 'title': 'test note', 'description': 'Test description', 'reminder': None, 'color': '#FFFFFF', 'image': None, 'is_archived': False, 'is_deleted': False, 'is_pinned': False, 'created_at': '2020-12-24T01:59:23.595054Z', 'updated_at': '2020-12-24T01:59:23.648161Z', 'user': 1, 'collaborators': [1], 'labels': [1]}
DEBUG | deleted note with id: 1
ERROR | Requested note does not exist
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 130, in get_object
    return Note.objects.get(id = pk, is_deleted = False) #calls get method to retrieve a particular user notes
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\query.py", line 429, in get
    raise self.model.DoesNotExist(
Notes.models.Note.DoesNotExist: Note matching query does not exist.
ERROR | Something went wrong
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 130, in get_object
    return Note.objects.get(id = pk, is_deleted = False) #calls get method to retrieve a particular user notes
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\query.py", line 429, in get
    raise self.model.DoesNotExist(
Notes.models.Note.DoesNotExist: Note matching query does not exist.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 145, in get
    notes = self.get_object(pk=pk)
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 133, in get_object
    result=utils.manage_response(status=False,message='note not found')
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\utils.py", line 65, in manage_response
    if kwargs['data'] == True:
KeyError: 'data'
DEBUG | validated new note details: {'id': 1, 'deleted_at': None, 'title': 'test note1', 'description': 'test description1', 'reminder': None, 'color': '#FFFFFF', 'image': None, 'is_archived': False, 'is_deleted': False, 'is_pinned': False, 'created_at': '2020-12-24T02:02:26.360223Z', 'updated_at': '2020-12-24T02:02:26.360223Z', 'user': 1, 'collaborators': [1], 'labels': [1]}
DEBUG | validated note list: [OrderedDict([('id', 1), ('deleted_at', None), ('title', 'test note1'), ('description', 'test description1'), ('reminder', None), ('color', '#FFFFFF'), ('image', None), ('is_archived', False), ('is_deleted', False), ('is_pinned', False), ('created_at', '2020-12-24T02:02:26.360223Z'), ('updated_at', '2020-12-24T02:02:26.360223Z'), ('user', 1), ('collaborators', [1]), ('labels', [1])])]
DEBUG | validated new note details: {'id': 2, 'deleted_at': None, 'title': 'test note1', 'description': 'test description1', 'reminder': None, 'color': '#FFFFFF', 'image': None, 'is_archived': False, 'is_deleted': False, 'is_pinned': False, 'created_at': '2020-12-24T02:02:26.415223Z', 'updated_at': '2020-12-24T02:02:26.415223Z', 'user': 1, 'collaborators': [1], 'labels': [1]}
DEBUG | validated updated note data: {'id': 1, 'deleted_at': None, 'title': 'test note', 'description': 'Test description', 'reminder': None, 'color': '#FFFFFF', 'image': None, 'is_archived': False, 'is_deleted': False, 'is_pinned': False, 'created_at': '2020-12-24T02:02:26.360223Z', 'updated_at': '2020-12-24T02:02:26.438222Z', 'user': 1, 'collaborators': [1], 'labels': [1]}
DEBUG | deleted note with id: 1
ERROR | Something went wrong
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 210, in delete
    result=utils.manage_response(status=True,message='deleted successfully')
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\utils.py", line 65, in manage_response
    if kwargs['data'] == True:
KeyError: 'data'
ERROR | Requested note does not exist
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 130, in get_object
    return Note.objects.get(id = pk, is_deleted = False) #calls get method to retrieve a particular user notes
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\query.py", line 429, in get
    raise self.model.DoesNotExist(
Notes.models.Note.DoesNotExist: Note matching query does not exist.
ERROR | Something went wrong
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 130, in get_object
    return Note.objects.get(id = pk, is_deleted = False) #calls get method to retrieve a particular user notes
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\query.py", line 429, in get
    raise self.model.DoesNotExist(
Notes.models.Note.DoesNotExist: Note matching query does not exist.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 145, in get
    notes = self.get_object(pk=pk)
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 133, in get_object
    result=utils.manage_response(status=False,message='note not found')
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\utils.py", line 65, in manage_response
    if kwargs['data']['members']:
KeyError: 'data'
ERROR | Something went wrong
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 99, in post
    result = utils.manage_response(status=True,message='created successfully',data=serializer.data)
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\utils.py", line 65, in manage_response
    if kwargs['data']['members']:
KeyError: 'members'
ERROR | Requested note does not exist
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 130, in get_object
    return Note.objects.get(id = pk, is_deleted = False) #calls get method to retrieve a particular user notes
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\query.py", line 429, in get
    raise self.model.DoesNotExist(
Notes.models.Note.DoesNotExist: Note matching query does not exist.
ERROR | Something went wrong
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 130, in get_object
    return Note.objects.get(id = pk, is_deleted = False) #calls get method to retrieve a particular user notes
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\query.py", line 429, in get
    raise self.model.DoesNotExist(
Notes.models.Note.DoesNotExist: Note matching query does not exist.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 145, in get
    notes = self.get_object(pk=pk)
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 133, in get_object
    result=utils.manage_response(status=False,message='note not found')
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\utils.py", line 65, in manage_response
    if kwargs["data"]:
KeyError: 'data'
DEBUG | validated new note details: {'id': 1, 'deleted_at': None, 'title': 'test note1', 'description': 'test description1', 'reminder': None, 'color': '#FFFFFF', 'image': None, 'is_archived': False, 'is_deleted': False, 'is_pinned': False, 'created_at': '2020-12-24T02:04:46.796688Z', 'updated_at': '2020-12-24T02:04:46.796688Z', 'user': 1, 'collaborators': [1], 'labels': [1]}
DEBUG | validated note list: [OrderedDict([('id', 1), ('deleted_at', None), ('title', 'test note1'), ('description', 'test description1'), ('reminder', None), ('color', '#FFFFFF'), ('image', None), ('is_archived', False), ('is_deleted', False), ('is_pinned', False), ('created_at', '2020-12-24T02:04:46.796688Z'), ('updated_at', '2020-12-24T02:04:46.796688Z'), ('user', 1), ('collaborators', [1]), ('labels', [1])])]
DEBUG | validated new note details: {'id': 2, 'deleted_at': None, 'title': 'test note1', 'description': 'test description1', 'reminder': None, 'color': '#FFFFFF', 'image': None, 'is_archived': False, 'is_deleted': False, 'is_pinned': False, 'created_at': '2020-12-24T02:04:46.835704Z', 'updated_at': '2020-12-24T02:04:46.835704Z', 'user': 1, 'collaborators': [1], 'labels': [1]}
DEBUG | validated updated note data: {'id': 1, 'deleted_at': None, 'title': 'test note', 'description': 'Test description', 'reminder': None, 'color': '#FFFFFF', 'image': None, 'is_archived': False, 'is_deleted': False, 'is_pinned': False, 'created_at': '2020-12-24T02:04:46.796688Z', 'updated_at': '2020-12-24T02:04:46.859689Z', 'user': 1, 'collaborators': [1], 'labels': [1]}
DEBUG | deleted note with id: 1
ERROR | Something went wrong
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 210, in delete
    result=utils.manage_response(status=True,message='deleted successfully')
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\utils.py", line 65, in manage_response
    if kwargs["data"]:
KeyError: 'data'
ERROR | Requested note does not exist
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 130, in get_object
    return Note.objects.get(id = pk, is_deleted = False) #calls get method to retrieve a particular user notes
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\query.py", line 429, in get
    raise self.model.DoesNotExist(
Notes.models.Note.DoesNotExist: Note matching query does not exist.
ERROR | Something went wrong
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 130, in get_object
    return Note.objects.get(id = pk, is_deleted = False) #calls get method to retrieve a particular user notes
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\query.py", line 429, in get
    raise self.model.DoesNotExist(
Notes.models.Note.DoesNotExist: Note matching query does not exist.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 145, in get
    notes = self.get_object(pk=pk)
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 133, in get_object
    result=utils.manage_response(status=False,message='note not found')
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\utils.py", line 65, in manage_response
    if kwargs['data']:
KeyError: 'data'
ERROR | Something went wrong
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 99, in post
    result = utils.manage_response(status=True, message='created successfully', data=serializer.data)
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\utils.py", line 69, in manage_response
    return Response(result,status.HTTP_201_CREATED)
NameError: name 'Response' is not defined
ERROR | Requested note does not exist
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 130, in get_object
    return Note.objects.get(id = pk, is_deleted = False) #calls get method to retrieve a particular user notes
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\query.py", line 429, in get
    raise self.model.DoesNotExist(
Notes.models.Note.DoesNotExist: Note matching query does not exist.
ERROR | Something went wrong
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 130, in get_object
    return Note.objects.get(id = pk, is_deleted = False) #calls get method to retrieve a particular user notes
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\query.py", line 429, in get
    raise self.model.DoesNotExist(
Notes.models.Note.DoesNotExist: Note matching query does not exist.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 145, in get
    notes = self.get_object(pk=pk)
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 133, in get_object
    result=utils.manage_response(status=False,message='note not found')
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\utils.py", line 65, in manage_response
    if kwargs['data']:
KeyError: 'data'
DEBUG | validated new note details: {'deleted_at': None, 'title': 'test note1', 'description': 'test description1', 'reminder': None, 'image': None, 'is_pinned': None, 'user': 1, 'collaborators': [1], 'labels': [1]}
DEBUG | validated note list: []
DEBUG | validated new note details: {'deleted_at': None, 'title': 'test note1', 'description': 'test description1', 'reminder': None, 'image': None, 'is_pinned': None, 'user': 1, 'collaborators': [1], 'labels': [1]}
ERROR | Requested note does not exist
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 130, in get_object
    return Note.objects.get(id = pk, is_deleted = False) #calls get method to retrieve a particular user notes
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\query.py", line 429, in get
    raise self.model.DoesNotExist(
Notes.models.Note.DoesNotExist: Note matching query does not exist.
ERROR | Something went wrong
Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 130, in get_object
    return Note.objects.get(id = pk, is_deleted = False) #calls get method to retrieve a particular user notes
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Ibrahim Khaleel\Envs\venv\lib\site-packages\django\db\models\query.py", line 429, in get
    raise self.model.DoesNotExist(
Notes.models.Note.DoesNotExist: Note matching query does not exist.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 167, in put
    notes = self.get_object(pk)
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\views.py", line 133, in get_object
    result=utils.manage_response(status=False,message='note not found')
  File "C:\Users\Ibrahim Khaleel\VisualStudioProjects\djangoprojects\fundoonote\myfundoonote\Notes\utils.py", line 65, in manage_response
    if kwargs['data']:
KeyError: 'data'
